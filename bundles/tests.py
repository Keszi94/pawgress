from django.test import TestCase
from decimal import Decimal
from django.urls import reverse

from bundles.models import Bundle
from courses.models import Course

# Create your tests here.


class TestBundle(TestCase):
    def setUp(self):
        self.course1 = Course.objects.create(title="Course 1", price=10.00)
        self.course2 = Course.objects.create(title="Course 2", price=20.00)
        self.bundle = Bundle.objects.create(
            title="Test Bundle",
            description="A test bundle",
            price=Decimal("25.00")
        )
        self.bundle.courses.set([self.course1, self.course2])

    def test_str_returns_title(self):
        self.assertEqual(str(self.bundle), "Test Bundle")

    def test_slug_autogenerated(self):
        self.assertEqual(self.bundle.slug, "test-bundle")

    def test_get_course_count(self):
        self.assertEqual(self.bundle.get_courses_count(), 2)


if __name__ == "__main__":
    import unittest
    unittest.main()


class AllBundlesViewTest(TestCase):

    def setUp(self):
        Bundle.objects.create(
            title="Test Bundle",
            description="Test description",
            price=29.99
            )

    def test_all_bundles_view_status_code(self):
        response = self.client.get(reverse('bundles'))
        self.assertEqual(response.status_code, 200)

    def test_all_bundles_view_template_used(self):
        response = self.client.get(reverse('bundles'))
        self.assertTemplateUsed(response, 'bundles/bundles.html')

    def test_all_bundles_context(self):
        response = self.client.get(reverse('bundles'))
        self.assertIn('bundles', response.context)
        self.assertEqual(len(response.context['bundles']), 1)
        self.assertEqual(response.context['bundles'][0].title, "Test Bundle")
